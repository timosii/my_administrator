services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env_prod
    ports:
      - "8080:8080"
    command: bash -c "alembic upgrade head && export PYTHONPATH=$PYTHONPATH:$(pwd) && python run.py"
    depends_on:
      ngrok:
        condition: service_started
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - type: bind
        source: ./
        target: /code
    networks:
      - my_admin

  db:
    image: postgres:15.1-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file: .env_prod
    ports:
      - "8124:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - my_admin

  redis:
    image: redis:latest
    volumes:
      - redis_data:/usr/local/etc/redis
    env_file: .env_prod
    ports:
      - "6379:6379"
    depends_on:
      ngrok:
        condition: service_started
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - my_admin

  ngrok:
    image: ngrok/ngrok:latest
    restart: unless-stopped
    command:
      - "start"
      - "--all"
      - "--config"
      - "/etc/ngrok.yml"

    volumes:
      - ./ngrok.yml:/etc/ngrok.yml
    ports:
      - 4040:4040
    networks:
      - my_admin

networks:
  my_admin:
    driver: bridge
volumes:
  postgres_data:
  redis_data:
